{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/ContactList/ContactListItem-fade.module.css","components/Notification/Notification.module.css","components/Container/Container.js","redux/phonebook/phonebook-actions.js","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","components/Notification/Notification.js","components/Form/Form.js","components/Filter/Filter.js","components/AppName/AppName.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js","components/Form/Form.module.css"],"names":["module","exports","Container","children","className","styles","addContact","createAction","name","number","payload","contact","id","uuidv4","deleteContact","filterContacts","connect","state","ownProps","item","contacts","items","find","dispatch","onDeleteContact","contactsActions","ListItem","key","button","type","onClick","filter","toLowerCase","includes","length","TransitionGroup","component","List","map","CSSTransition","timeout","classNames","fadeStyles","Notification","message","Form","notification","notificationIsVisible","handleInputChange","e","currentTarget","value","setState","handleSubmit","props","preventDefault","some","onAddContact","reset","alert","this","in","unmountOnExit","onEntered","form","autoComplete","onSubmit","label","labelName","required","input","placeholder","onChange","Component","mapDispatchToProps","contactActions","target","AppName","appear","App","createReducer","action","combineReducers","store","configureStore","reducer","contactsReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7392c67c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"ContactList_List__20gyh\",\"ListItem\":\"ContactList_ListItem__vxGfb\",\"button\":\"ContactList_button__1RuFy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"labelName\":\"Filter_labelName__3VI7p\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3tQ9A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"ContactListItem-fade_enter__3L9LC\",\"enterActive\":\"ContactListItem-fade_enterActive__3juOu\",\"exit\":\"ContactListItem-fade_exit__2OvWU\",\"exitActive\":\"ContactListItem-fade_exitActive__1R0L4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Notification\":\"Notification_Notification__2vzo1\"};","import React from 'react';\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.Container}>{children}</div>\n);\n\nexport default Container;\n","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst addContact = createAction('contacts/add', ({ name, number }) => ({\n  payload: {\n    contact: {\n      id: uuidv4(),\n      name,\n      number,\n    },\n  },\n}));\n\nconst deleteContact = createAction('contacts/delete');\nconst filterContacts = createAction('contacts/filter');\n\nexport default { addContact, deleteContact, filterContacts };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/phonebook/phonebook-actions';\n\nconst ContactItem = ({ id, name, number, onDeleteContact }) => {\n  return (\n    <li className={styles.ListItem} key={id}>\n      <p>\n        {name} : {number}\n      </p>\n      <button className={styles.button} type=\"button\" onClick={onDeleteContact}>\n        Удалить\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state, ownProps) => {\n  const item = state.contacts.items.find(item => item.id === ownProps.id);\n  return { ...item };\n};\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onDeleteContact: () => dispatch(contactsActions.deleteContact(ownProps.id)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactItem from './ContactItem';\nimport styles from './ContactList.module.css';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport fadeStyles from './ContactListItem-fade.module.css';\n// import contactActions from '../../redux/phonebook/phonebook-actions';\n\nconst ContactList = ({ contacts }) => {\n  return (\n    contacts.length > 0 && (\n      <TransitionGroup component=\"ul\" className={styles.List}>\n        {contacts.map(({ id }) => (\n          <CSSTransition key={id} timeout={250} classNames={fadeStyles}>\n            <ContactItem id={id} />\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    )\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\nconst mapStateToProps = state => {\n  const { items, filter } = state.contacts;\n  const filteredContacts = items.filter(item =>\n    item.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n  return {\n    contacts: filteredContacts,\n  };\n};\n\nexport default connect(mapStateToProps)(ContactList);\n","import React from 'react';\nimport styles from './Notification.module.css';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return (\n    <div className={styles.Notification}>\n      <p>{message}</p>\n    </div>\n  );\n};\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\nexport default Notification;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Form.module.css';\nimport { connect } from 'react-redux';\nimport contactActions from '../../redux/phonebook/phonebook-actions';\nimport Notification from '../Notification';\nimport { CSSTransition } from 'react-transition-group';\nimport './Form-notification.css';\n\nclass Form extends Component {\n  static propTypes = {\n    onAddContact: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n    notification: '',\n    notificationIsVisible: false,\n  };\n\n  handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n  handleSubmit = e => {\n    const { name, number } = this.state;\n    const contacts = this.props.contacts;\n\n    e.preventDefault();\n\n    if (name === '') {\n      alert('Please, give a name for new contact');\n      return;\n    }\n    if (number === '') {\n      alert('Please, add a number');\n      return;\n    }\n    if (\n      contacts.some(contact => {\n        return name.toLowerCase() === contact.name.toLowerCase();\n      })\n    ) {\n      this.setState({\n        notification: `Contact \"${name}\" is already exist`,\n        notificationIsVisible: true,\n      });\n      return;\n    }\n\n    if (\n      contacts.some(contact => {\n        return number === contact.number;\n      })\n    ) {\n      this.setState({\n        notification: `Number \"${number}\" is already exist`,\n        notificationIsVisible: true,\n      });\n      return;\n    }\n\n    this.props.onAddContact({ name, number });\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { notification, notificationIsVisible } = this.state;\n    return (\n      <>\n        <CSSTransition\n          in={notificationIsVisible}\n          timeout={3000}\n          classNames=\"Notification-slideIn\"\n          unmountOnExit\n          onEntered={() => this.setState({ notificationIsVisible: false })}\n        >\n          <Notification message={notification} />\n        </CSSTransition>{' '}\n        <form\n          className={styles.form}\n          autoComplete=\"off\"\n          onSubmit={this.handleSubmit}\n        >\n          <label className={styles.label}>\n            <p className={styles.labelName}>Name:&#42;</p>\n            <input\n              required\n              className={styles.input}\n              type=\"text\"\n              placeholder=\"ex. Anne Hathaway\"\n              value={this.state.name}\n              name=\"name\"\n              onChange={this.handleInputChange}\n            />\n          </label>\n          <label className={styles.label}>\n            <p className={styles.labelName}>Number:&#42;</p>\n            <input\n              required\n              className={styles.input}\n              type=\"number\"\n              placeholder=\"ex. 0532455678\"\n              value={this.state.number}\n              name=\"number\"\n              onChange={this.handleInputChange}\n            />\n          </label>\n\n          <button className={styles.button} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n});\nconst mapDispatchToProps = {\n  onAddContact: contactActions.addContact,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import React from 'react';\n// import PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport contactActions from '../../redux/phonebook/phonebook-actions';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={styles.label}>\n      <p className={styles.labelName}>Find contact by name</p>\n      <input\n        className={styles.input}\n        type=\"text\"\n        placeholder=\"Name\"\n        value={value}\n        onChange={e => onChange(e.target.value)}\n      ></input>\n    </label>\n  );\n};\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = {\n  onChange: contactActions.filterContacts,\n};\n// Filter.propTypes = {\n//   value: PropTypes.string.isRequired,\n//   onChange: PropTypes.func.isRequired,\n// };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport './AppName.css';\n\nconst AppName = () => {\n  return (\n    <CSSTransition\n      in={true}\n      appear={true}\n      timeout={250}\n      classNames=\"AppName-slideIn\"\n      unmountOnExit\n    >\n      <h2>Phonebook</h2>\n    </CSSTransition>\n  );\n};\n\nexport default AppName;\n","import React, { Component } from 'react';\nimport Container from './components/Container';\nimport ContactList from './components/ContactList';\nimport Form from './components/Form';\nimport Filter from './components/Filter';\nimport AppName from './components/AppName';\nimport './App.css';\n\nexport default function App() {\n  return (\n    <Container>\n      <AppName />\n      <Form />\n      <Filter />\n      <h2>Contacts</h2>\n      <ContactList />\n    </Container>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport contactsActions from './phonebook-actions';\n\nconst addContact = (state, action) => [...state, action.payload.contact];\n\nconst deleteContact = (state, action) =>\n  state.filter(contact => contact.id !== action.payload);\n\nconst items = createReducer([], {\n  [contactsActions.addContact]: addContact,\n  [contactsActions.deleteContact]: deleteContact,\n});\n\nconst filter = createReducer('', {\n  [contactsActions.filterContacts]: (state, action) => action.payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n\n// deleteContact = contactId => {\n//     this.setState(prevState => ({\n//       contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n//     }));\n//   };\n\n//   addContact = ({ name, number }) => {\n//     const { contacts } = this.state;\n//     const newContact = {\n//       id: uuidv4(),\n//       name,\n//       number,\n//     };\n\n//\n//   filterContacts = e => {\n//     this.setState({ filter: e.currentTarget.value });\n//   };\n\n//   getFilteredContacts = () => {\n//     const { contacts, filter } = this.state;\n//     const normalizedFilter = filter.toLowerCase();\n//     return contacts.filter(contact =>\n//       contact.name.toLowerCase().includes(normalizedFilter),\n//     );\n//   };\n","import { configureStore } from '@reduxjs/toolkit';\nimport contactsReducer from './phonebook/phonebook-reducer';\n\nconst store = configureStore({ reducer: { contacts: contactsReducer } });\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from './redux/store';\n\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n\n  document.getElementById('root'),\n);\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2TM1N\",\"label\":\"Form_label__15SAE\",\"input\":\"Form_input__2ESfd\",\"labelName\":\"Form_labelName__2L7Gh\",\"button\":\"Form_button__243jh\"};"],"sourceRoot":""}